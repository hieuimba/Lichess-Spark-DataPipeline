{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workflows_la_get_keys_name": {
            "defaultValue": "la-get-keys",
            "type": "String"
        },
        "workflows_la_get_games_name": {
            "defaultValue": "la-get-games",
            "type": "String"
        },
        "connections_documentdb_2_name": {
            "defaultValue": "documentdb-2",
            "type": "String"
        },
        "vaults_kv_guess_the_elo_dev_name": {
            "defaultValue": "kv-guess-the-elo-dev",
            "type": "String"
        },
        "storageAccounts_guesstheelostoragedev_name": {
            "defaultValue": "guesstheelostoragedev",
            "type": "String"
        },
        "workspaces_dbricks_guess_the_elo_dev_name": {
            "defaultValue": "dbricks-guess-the-elo-dev",
            "type": "String"
        },
        "databaseAccounts_cosmosdb_guess_the_elo_dev_name": {
            "defaultValue": "cosmosdb-guess-the-elo-dev",
            "type": "String"
        },
        "accessConnectors_dbricks_connector_guess_the_elo_dev_name": {
            "defaultValue": "dbricks-connector-guess-the-elo-dev",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Databricks/accessConnectors",
            "apiVersion": "2023-05-01",
            "name": "[parameters('accessConnectors_dbricks_connector_guess_the_elo_dev_name')]",
            "location": "canadacentral",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {}
        },
        {
            "type": "Microsoft.Databricks/workspaces",
            "apiVersion": "2023-09-15-preview",
            "name": "[parameters('workspaces_dbricks_guess_the_elo_dev_name')]",
            "location": "canadacentral",
            "sku": {
                "name": "premium"
            },
            "properties": {
                "defaultCatalog": {
                    "initialType": "UnityCatalog"
                },
                "managedResourceGroupId": "[concat('/subscriptions/2f5a8e0d-7231-4f3a-afae-4c4825eda114/resourceGroups/databricks-rg-', parameters('workspaces_dbricks_guess_the_elo_dev_name'), '-rujiv7jcpgg2q')]",
                "parameters": {
                    "enableNoPublicIp": {
                        "value": false
                    },
                    "prepareEncryption": {
                        "value": false
                    },
                    "publicIpName": {
                        "value": "nat-gw-public-ip"
                    },
                    "requireInfrastructureEncryption": {
                        "value": false
                    },
                    "storageAccountName": {
                        "value": "dbstorageamqwtstoedvno"
                    },
                    "storageAccountSkuName": {
                        "value": "Standard_GRS"
                    },
                    "vnetAddressPrefix": {
                        "value": "10.139"
                    }
                },
                "authorizations": [
                    {
                        "principalId": "9a74af6f-d153-4348-988a-e2672920bee9",
                        "roleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635"
                    }
                ],
                "createdBy": {},
                "updatedBy": {}
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "apiVersion": "2024-02-15-preview",
            "name": "[parameters('databaseAccounts_cosmosdb_guess_the_elo_dev_name')]",
            "location": "Canada Central",
            "tags": {
                "defaultExperience": "Core (SQL)",
                "hidden-cosmos-mmspecial": ""
            },
            "kind": "GlobalDocumentDB",
            "identity": {
                "type": "None"
            },
            "properties": {
                "publicNetworkAccess": "Enabled",
                "enableAutomaticFailover": false,
                "enableMultipleWriteLocations": false,
                "isVirtualNetworkFilterEnabled": false,
                "virtualNetworkRules": [],
                "disableKeyBasedMetadataWriteAccess": false,
                "enableFreeTier": false,
                "enableAnalyticalStorage": false,
                "analyticalStorageConfiguration": {
                    "schemaType": "WellDefined"
                },
                "databaseAccountOfferType": "Standard",
                "enableMaterializedViews": false,
                "defaultIdentity": "FirstPartyIdentity",
                "networkAclBypass": "None",
                "disableLocalAuth": false,
                "enablePartitionMerge": false,
                "enablePerRegionPerPartitionAutoscale": false,
                "enableBurstCapacity": false,
                "enablePriorityBasedExecution": false,
                "defaultPriorityLevel": "High",
                "minimalTlsVersion": "Tls12",
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Session",
                    "maxIntervalInSeconds": 5,
                    "maxStalenessPrefix": 100
                },
                "locations": [
                    {
                        "locationName": "Canada Central",
                        "failoverPriority": 0,
                        "isZoneRedundant": false
                    }
                ],
                "cors": [],
                "capabilities": [
                    {
                        "name": "EnableServerless"
                    }
                ],
                "ipRules": [],
                "backupPolicy": {
                    "type": "Periodic",
                    "periodicModeProperties": {
                        "backupIntervalInMinutes": 240,
                        "backupRetentionIntervalInHours": 8,
                        "backupStorageRedundancy": "Geo"
                    }
                },
                "networkAclBypassResourceIds": [],
                "diagnosticLogSettings": {
                    "enableFullTextQuery": "None"
                },
                "capacity": {
                    "totalThroughputLimit": 4000
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2023-07-01",
            "name": "[parameters('vaults_kv_guess_the_elo_dev_name')]",
            "location": "canadacentral",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "tenantId": "08f8da58-0aa8-4930-bc0f-ce59279820fa",
                "accessPolicies": [],
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 90,
                "enableRbacAuthorization": true,
                "vaultUri": "[concat('https://', parameters('vaults_kv_guess_the_elo_dev_name'), '.vault.azure.net/')]",
                "provisioningState": "Succeeded",
                "publicNetworkAccess": "Enabled"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2023-04-01",
            "name": "[parameters('storageAccounts_guesstheelostoragedev_name')]",
            "location": "canadacentral",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "dnsEndpointType": "Standard",
                "defaultToOAuthAuthentication": false,
                "publicNetworkAccess": "Enabled",
                "allowCrossTenantReplication": false,
                "isSftpEnabled": false,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": true,
                "isHnsEnabled": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "requireInfrastructureEncryption": false,
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_documentdb_2_name')]",
            "location": "canadacentral",
            "kind": "V1",
            "properties": {
                "displayName": "cosmosdb-conn",
                "statuses": [
                    {
                        "status": "Connected"
                    }
                ],
                "customParameterValues": {},
                "createdTime": "2024-04-30T21:00:10.3146136Z",
                "changedTime": "2024-04-30T21:00:10.3146136Z",
                "api": {
                    "name": "documentdb",
                    "displayName": "Azure Cosmos DB",
                    "description": "Azure Cosmos DB is a globally distributed multi-model database service designed to enable you to elastically and independently scale throughput and storage across any number of geographical regions with a comprehensive SLA.",
                    "iconUri": "https://connectoricons-prod.azureedge.net/releases/v1.0.1686/1.0.1686.3706/documentdb/icon.png",
                    "brandColor": "#1C3A56",
                    "id": "/subscriptions/2f5a8e0d-7231-4f3a-afae-4c4825eda114/providers/Microsoft.Web/locations/canadacentral/managedApis/documentdb",
                    "type": "Microsoft.Web/locations/managedApis"
                },
                "testLinks": [
                    {
                        "requestUri": "[concat('https://management.azure.com:443/subscriptions/2f5a8e0d-7231-4f3a-afae-4c4825eda114/resourceGroups/rg-guess-the-elo-dev/providers/Microsoft.Web/connections/', parameters('connections_documentdb_2_name'), '/extensions/proxy/testConnection?api-version=2016-06-01')]",
                        "method": "get"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
            "apiVersion": "2024-02-15-preview",
            "name": "[concat(parameters('databaseAccounts_cosmosdb_guess_the_elo_dev_name'), '/db-guess-the-elo')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_cosmosdb_guess_the_elo_dev_name'))]"
            ],
            "properties": {
                "resource": {
                    "id": "db-guess-the-elo"
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions",
            "apiVersion": "2024-02-15-preview",
            "name": "[concat(parameters('databaseAccounts_cosmosdb_guess_the_elo_dev_name'), '/00000000-0000-0000-0000-000000000001')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_cosmosdb_guess_the_elo_dev_name'))]"
            ],
            "properties": {
                "roleName": "Cosmos DB Built-in Data Reader",
                "type": "BuiltInRole",
                "assignableScopes": [
                    "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_cosmosdb_guess_the_elo_dev_name'))]"
                ],
                "permissions": [
                    {
                        "dataActions": [
                            "Microsoft.DocumentDB/databaseAccounts/readMetadata",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/executeQuery",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/readChangeFeed",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/read"
                        ],
                        "notDataActions": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions",
            "apiVersion": "2024-02-15-preview",
            "name": "[concat(parameters('databaseAccounts_cosmosdb_guess_the_elo_dev_name'), '/00000000-0000-0000-0000-000000000002')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_cosmosdb_guess_the_elo_dev_name'))]"
            ],
            "properties": {
                "roleName": "Cosmos DB Built-in Data Contributor",
                "type": "BuiltInRole",
                "assignableScopes": [
                    "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_cosmosdb_guess_the_elo_dev_name'))]"
                ],
                "permissions": [
                    {
                        "dataActions": [
                            "Microsoft.DocumentDB/databaseAccounts/readMetadata",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/*",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/*"
                        ],
                        "notDataActions": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2023-07-01",
            "name": "[concat(parameters('vaults_kv_guess_the_elo_dev_name'), '/adf-databricks-access-token')]",
            "location": "canadacentral",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_kv_guess_the_elo_dev_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_la_get_games_name')]",
            "location": "canadacentral",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_documentdb_2_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_HTTP_request_is_received": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "GameID": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "actions": {
                        "Response": {
                            "runAfter": {
                                "Query_documents_V5": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "statusCode": 200,
                                "body": "@body('Query_documents_V5')?['value']"
                            }
                        },
                        "Query_documents_V5": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['documentdb-1']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/v5/cosmosdb/@{encodeURIComponent('AccountNameFromSettings')}/dbs/@{encodeURIComponent('db-guess-the-elo')}/colls/@{encodeURIComponent('games')}/query",
                                "queries": {
                                    "queryText": "SELECT c.Moves, c.WhiteElo, c.BlackElo, c.Site, c.Event, c.TimeControl FROM c WHERE ARRAY_CONTAINS(@{triggerBody()?['GameID']}, c.GameID)"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "documentdb-1": {
                                "id": "/subscriptions/2f5a8e0d-7231-4f3a-afae-4c4825eda114/providers/Microsoft.Web/locations/canadacentral/managedApis/documentdb",
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_documentdb_2_name'))]",
                                "connectionName": "documentdb-2"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_la_get_keys_name')]",
            "location": "canadacentral",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_documentdb_2_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_HTTP_request_is_received": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "method": "GET"
                            }
                        }
                    },
                    "actions": {
                        "Query_documents_V5": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['documentdb-1']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/v5/cosmosdb/@{encodeURIComponent('AccountNameFromSettings')}/dbs/@{encodeURIComponent('db-guess-the-elo')}/colls/@{encodeURIComponent('keys')}/query",
                                "queries": {
                                    "queryText": "SELECT c.Event, c.GameIDs FROM c"
                                }
                            }
                        },
                        "Response": {
                            "runAfter": {
                                "Query_documents_V5": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "statusCode": 200,
                                "body": "@body('Query_documents_V5')?['value']"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "documentdb-1": {
                                "id": "/subscriptions/2f5a8e0d-7231-4f3a-afae-4c4825eda114/providers/Microsoft.Web/locations/canadacentral/managedApis/documentdb",
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_documentdb_2_name'))]",
                                "connectionName": "documentdb-2"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2023-04-01",
            "name": "[concat(parameters('storageAccounts_guesstheelostoragedev_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_guesstheelostoragedev_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "allowPermanentDelete": false,
                    "enabled": true,
                    "days": 7
                },
                "containerDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2023-04-01",
            "name": "[concat(parameters('storageAccounts_guesstheelostoragedev_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_guesstheelostoragedev_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "protocolSettings": {
                    "smb": {}
                },
                "cors": {
                    "corsRules": []
                },
                "shareDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2023-04-01",
            "name": "[concat(parameters('storageAccounts_guesstheelostoragedev_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_guesstheelostoragedev_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2023-04-01",
            "name": "[concat(parameters('storageAccounts_guesstheelostoragedev_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_guesstheelostoragedev_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
            "apiVersion": "2024-02-15-preview",
            "name": "[concat(parameters('databaseAccounts_cosmosdb_guess_the_elo_dev_name'), '/db-guess-the-elo/games')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccounts_cosmosdb_guess_the_elo_dev_name'), 'db-guess-the-elo')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_cosmosdb_guess_the_elo_dev_name'))]"
            ],
            "properties": {
                "resource": {
                    "id": "games",
                    "indexingPolicy": {
                        "indexingMode": "consistent",
                        "automatic": true,
                        "includedPaths": [
                            {
                                "path": "/*"
                            }
                        ],
                        "excludedPaths": [
                            {
                                "path": "/\"_etag\"/?"
                            }
                        ]
                    },
                    "partitionKey": {
                        "paths": [
                            "/Event"
                        ],
                        "kind": "Hash",
                        "version": 2
                    },
                    "uniqueKeyPolicy": {
                        "uniqueKeys": []
                    },
                    "conflictResolutionPolicy": {
                        "mode": "LastWriterWins",
                        "conflictResolutionPath": "/_ts"
                    },
                    "computedProperties": []
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
            "apiVersion": "2024-02-15-preview",
            "name": "[concat(parameters('databaseAccounts_cosmosdb_guess_the_elo_dev_name'), '/db-guess-the-elo/keys')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccounts_cosmosdb_guess_the_elo_dev_name'), 'db-guess-the-elo')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_cosmosdb_guess_the_elo_dev_name'))]"
            ],
            "properties": {
                "resource": {
                    "id": "keys",
                    "indexingPolicy": {
                        "indexingMode": "consistent",
                        "automatic": true,
                        "includedPaths": [
                            {
                                "path": "/*"
                            }
                        ],
                        "excludedPaths": [
                            {
                                "path": "/\"_etag\"/?"
                            }
                        ]
                    },
                    "partitionKey": {
                        "paths": [
                            "/Event"
                        ],
                        "kind": "Hash",
                        "version": 2
                    },
                    "uniqueKeyPolicy": {
                        "uniqueKeys": []
                    },
                    "conflictResolutionPolicy": {
                        "mode": "LastWriterWins",
                        "conflictResolutionPath": "/_ts"
                    },
                    "computedProperties": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2023-04-01",
            "name": "[concat(parameters('storageAccounts_guesstheelostoragedev_name'), '/default/bronze')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_guesstheelostoragedev_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_guesstheelostoragedev_name'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None",
                "immutableStorageWithVersioning": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2023-04-01",
            "name": "[concat(parameters('storageAccounts_guesstheelostoragedev_name'), '/default/gold')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_guesstheelostoragedev_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_guesstheelostoragedev_name'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None",
                "immutableStorageWithVersioning": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2023-04-01",
            "name": "[concat(parameters('storageAccounts_guesstheelostoragedev_name'), '/default/raw')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_guesstheelostoragedev_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_guesstheelostoragedev_name'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None",
                "immutableStorageWithVersioning": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2023-04-01",
            "name": "[concat(parameters('storageAccounts_guesstheelostoragedev_name'), '/default/silver')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_guesstheelostoragedev_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_guesstheelostoragedev_name'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None",
                "immutableStorageWithVersioning": {
                    "enabled": false
                }
            }
        }
    ]
}
