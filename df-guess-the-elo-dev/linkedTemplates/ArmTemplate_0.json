{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "df-guess-the-elo-dev"
		},
		"ls_mongodb_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_mongodb'"
		},
		"ls_datalakestorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://guesstheelostoragedev.dfs.core.windows.net/"
		},
		"ls_keyvault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kv-guess-the-elo-dev.vault.azure.net/"
		},
		"ls_lichess_database_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://database.lichess.org/standard/"
		},
		"ls_mongodb_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "guess-the-elo"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ls_datalakestorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_datalakestorage_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_keyvault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('ls_keyvault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_lichess_database')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('ls_lichess_database_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_mongodb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MongoDbAtlas",
				"typeProperties": {
					"connectionString": "[parameters('ls_mongodb_connectionString')]",
					"database": "[parameters('ls_mongodb_properties_typeProperties_database')]",
					"driverVersion": "v2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_config')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalakestorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"fileSystem": "config"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalakestorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_datalake_gold_layer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalakestorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "gold"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalakestorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_datalake_raw_layer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalakestorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "raw"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalakestorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_lichess_database')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_lichess_database",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().fileName",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_lichess_database')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_mongodb_database')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_mongodb",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"collectionName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "MongoDbAtlasCollection",
				"schema": [],
				"typeProperties": {
					"collection": {
						"value": "@dataset().collectionName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_mongodb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_databricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-4986084740927730.10.azuredatabricks.net",
					"accessToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ls_keyvault",
							"type": "LinkedServiceReference"
						},
						"secretName": "adf-databricks-access-token"
					},
					"newClusterNodeType": "Standard_DS4_v2",
					"newClusterNumOfWorker": "0",
					"newClusterSparkEnvVars": {
						"PYSPARK_PYTHON": "/databricks/python3/bin/python3"
					},
					"newClusterVersion": "13.3.x-photon-scala2.12",
					"clusterOption": "Fixed",
					"newClusterInitScripts": [],
					"policyId": "000257E4C33F2332"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_keyvault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_copy_games_to_mongodb')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Gold Games to Mongo",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "Updated",
										"value": {
											"value": "@convertFromUtc(utcnow(), 'Central Standard Time', 'dd-MM-yyyy HH:mm:ss')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat('Games/',pipeline().parameters.Month)",
										"type": "Expression"
									},
									"wildcardFileName": "*.parquet",
									"enablePartitionDiscovery": true
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "MongoDbAtlasSink",
								"writeBatchTimeout": "00:30:00",
								"writeBehavior": "upsert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GameID",
											"type": "String"
										},
										"sink": {
											"path": "$['GameID']"
										}
									},
									{
										"source": {
											"name": "TimeControl",
											"type": "String"
										},
										"sink": {
											"path": "$['TimeControl']"
										}
									},
									{
										"source": {
											"name": "Opening",
											"type": "String"
										},
										"sink": {
											"path": "$['Opening']"
										}
									},
									{
										"source": {
											"name": "ECO",
											"type": "String"
										},
										"sink": {
											"path": "$['ECO']"
										}
									},
									{
										"source": {
											"name": "Site",
											"type": "String"
										},
										"sink": {
											"path": "$['Site']"
										}
									},
									{
										"source": {
											"name": "Termination",
											"type": "String"
										},
										"sink": {
											"path": "$['Termination']"
										}
									},
									{
										"source": {
											"name": "Moves",
											"type": "String"
										},
										"sink": {
											"path": "$['Moves']"
										}
									},
									{
										"source": {
											"name": "Result",
											"type": "String"
										},
										"sink": {
											"path": "$['Result']"
										}
									},
									{
										"source": {
											"name": "White",
											"type": "String"
										},
										"sink": {
											"path": "$['White']"
										}
									},
									{
										"source": {
											"name": "WhiteTitle",
											"type": "String"
										},
										"sink": {
											"path": "$['WhiteTitle']"
										}
									},
									{
										"source": {
											"name": "WhiteElo",
											"type": "Int32"
										},
										"sink": {
											"path": "$['WhiteElo']"
										}
									},
									{
										"source": {
											"name": "WhiteRatingDiff",
											"type": "Int32"
										},
										"sink": {
											"path": "$['WhiteRatingDiff']"
										}
									},
									{
										"source": {
											"name": "Black",
											"type": "String"
										},
										"sink": {
											"path": "$['Black']"
										}
									},
									{
										"source": {
											"name": "BlackTitle",
											"type": "String"
										},
										"sink": {
											"path": "$['BlackTitle']"
										}
									},
									{
										"source": {
											"name": "BlackElo",
											"type": "Int32"
										},
										"sink": {
											"path": "$['BlackElo']"
										}
									},
									{
										"source": {
											"name": "BlackRatingDiff",
											"type": "Int32"
										},
										"sink": {
											"path": "$['BlackRatingDiff']"
										}
									},
									{
										"source": {
											"name": "EloDiff",
											"type": "Int32"
										},
										"sink": {
											"path": "$['EloDiff']"
										}
									},
									{
										"source": {
											"name": "NumberOfMoves",
											"type": "Int32"
										},
										"sink": {
											"path": "$['NumberOfMoves']"
										}
									},
									{
										"source": {
											"name": "ResultComment",
											"type": "String"
										},
										"sink": {
											"path": "$['ResultComment']"
										}
									},
									{
										"source": {
											"name": "UTCDate",
											"type": "String"
										},
										"sink": {
											"path": "$['UTCDate']"
										}
									},
									{
										"source": {
											"name": "NumericGameID",
											"type": "Int32"
										},
										"sink": {
											"path": "$['NumericGameID']"
										}
									},
									{
										"source": {
											"name": "Event",
											"type": "String"
										},
										"sink": {
											"path": "$['Event']"
										}
									},
									{
										"source": {
											"name": "EloRange",
											"type": "String"
										},
										"sink": {
											"path": "$['EloRange']"
										}
									},
									{
										"source": {
											"name": "ID",
											"type": "String"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"name": "Updated"
										},
										"sink": {
											"path": "$['Updated']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "ds_datalake_gold_layer",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_mongodb_database",
								"type": "DatasetReference",
								"parameters": {
									"collectionName": "games"
								}
							}
						]
					},
					{
						"name": "Split Games",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Lookup URL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "@activity('Lookup URL').output.firstRow.Prop_0",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup URL",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Gold Games to Mongo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_config",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "mongodb-split-collection-url.txt"
								}
							},
							"firstRowOnly": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Month": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-07-31T00:01:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_datalake_gold_layer')]",
				"[concat(variables('factoryId'), '/datasets/ds_mongodb_database')]",
				"[concat(variables('factoryId'), '/datasets/ds_config')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_download_games_to_raw')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "From Lichess to Raw",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_lichess_database",
								"type": "DatasetReference",
								"parameters": {
									"fileName": {
										"value": "@concat('lichess_db_standard_rated_',pipeline().parameters.Month,'.pgn.zst')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_datalake_raw_layer",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Month": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-28T05:36:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_lichess_database')]",
				"[concat(variables('factoryId'), '/datasets/ds_datalake_raw_layer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_parse_games_in_databricks')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "run_all",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/hieuimba@gmail.com/Lichess-Spark-DataPipeline/guess-the-elo/databricks/0-run-all",
							"baseParameters": {
								"month": {
									"value": "@pipeline().parameters.Month",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_databricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Month": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-04T02:15:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_databricks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_main')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "pl_download_games_to_raw",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_download_games_to_raw",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Month": {
									"value": "@pipeline().parameters.Month",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "pl_parse_games_in_databricks",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_download_games_to_raw",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_parse_games_in_databricks",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Month": {
									"value": "@pipeline().parameters.Month",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "pl_copy_games_to_mongodb",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_parse_games_in_databricks",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_copy_games_to_mongodb",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Month": {
									"value": "@pipeline().parameters.Month",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Lookup URL",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "pl_copy_games_to_mongodb",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_config",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "la-update-blob-url.txt"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Update Config",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Lookup URL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": {
								"value": "@activity('Lookup URL').output.firstRow.Prop_0",
								"type": "Expression"
							},
							"body": {
								"value": "{\n    \"Month\": \"@{pipeline().parameters.Month}\"\n}\n",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Month": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-07-31T00:01:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_download_games_to_raw')]",
				"[concat(variables('factoryId'), '/pipelines/pl_parse_games_in_databricks')]",
				"[concat(variables('factoryId'), '/pipelines/pl_copy_games_to_mongodb')]",
				"[concat(variables('factoryId'), '/datasets/ds_config')]"
			]
		}
	]
}